services:
  logo-ali-front:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ../frontend:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
    command: npm run dev

  logo-ali-back:
    build:
      context: ../backend
      dockerfile: Dockerfile
    ports:
      - "3333:3333"
    volumes:
      - ../backend:/app
      - /app/node_modules
    environment:
      NODE_ENV: development
      POSTGRES_HOST: logo-ali-db
      POSTGRES_PORT: 5432
      POSTGRES_USER: admin
      POSTGRES_DB: logo_ali_db
      POSTGRES_PASSWORD: admin
      BACKEND_PORT: 3333
    depends_on:
      logo-ali-db:
        condition: service_healthy
    command: sh -c "dockerize -wait tcp://logo-ali-db:5432 -timeout 30s npm run dev"

  logo-ali-db:
    image: postgres:17.4-alpine3.21
    container_name: logo-ali-db
    environment:
      POSTGRES_USER: admin
      POSTGRES_DB: logo_ali_db
      POSTGRES_PASSWORD: admin
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-ctype=C"
    ports:
      - "5434:5432"
    volumes:
      - pgdata_logo-ali:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d logo_ali_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    command:
      ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]

volumes:
  pgdata_logo-ali:
